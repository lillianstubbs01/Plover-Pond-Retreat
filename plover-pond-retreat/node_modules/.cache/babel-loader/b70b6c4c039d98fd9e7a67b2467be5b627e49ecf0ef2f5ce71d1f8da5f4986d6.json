{"ast":null,"code":"import { rehydrateRendererCache, createDOMRenderer } from '@griffel/core';\nimport * as React from 'react';\n\n/**\r\n * Verifies if an application can use DOM.\r\n */\nfunction canUseDOM() {\n  return typeof window !== 'undefined' && !!(window.document && window.document.createElement);\n}\n/**\r\n * @private\r\n */\nconst RendererContext = /*#__PURE__*/React.createContext( /*#__PURE__*/createDOMRenderer());\n/**\r\n * @public\r\n */\nconst RendererProvider = _ref => {\n  let {\n    children,\n    renderer,\n    targetDocument\n  } = _ref;\n  if (canUseDOM()) {\n    // This if statement technically breaks the rules of hooks, but is safe because the condition never changes after\n    // mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useMemo(() => {\n      // \"rehydrateCache()\" can't be called in effects as it needs to be called before any component will be rendered to\n      // avoid double insertion of classes\n      rehydrateRendererCache(renderer, targetDocument);\n    }, [renderer, targetDocument]);\n  }\n  return /*#__PURE__*/React.createElement(RendererContext.Provider, {\n    value: renderer\n  }, children);\n};\n/**\r\n * Returns an instance of current makeStyles() renderer.\r\n *\r\n * @private Exported as \"useRenderer_unstable\" use it on own risk. Can be changed or removed without a notice.\r\n */\nfunction useRenderer() {\n  return React.useContext(RendererContext);\n}\nexport { RendererProvider, useRenderer };","map":{"version":3,"names":["canUseDOM","window","document","createElement","RendererContext","React","createContext","createDOMRenderer","RendererProvider","_ref","children","renderer","targetDocument","useMemo","rehydrateRendererCache","Provider","value","useRenderer","useContext"],"sources":["C:\\Users\\lilli\\Phpstorm\\Plover-Pond-Retreat\\plover-pond-retreat\\packages\\react\\src\\RendererContext.tsx"],"sourcesContent":["import { createDOMRenderer, rehydrateRendererCache } from '@griffel/core';\nimport * as React from 'react';\nimport type { GriffelRenderer } from '@griffel/core';\n\nexport interface RendererProviderProps {\n  /** An instance of Griffel renderer. */\n  renderer: GriffelRenderer;\n\n  /**\n   * Document used to insert CSS variables to head\n   */\n  targetDocument?: Document;\n\n  /**\n   * Content wrapped by the RendererProvider\n   */\n  children: React.ReactNode;\n}\n\n/**\n * Verifies if an application can use DOM.\n */\nfunction canUseDOM(): boolean {\n  return typeof window !== 'undefined' && !!(window.document && window.document.createElement);\n}\n\n/**\n * @private\n */\nconst RendererContext = React.createContext<GriffelRenderer>(createDOMRenderer());\n\n/**\n * @public\n */\nexport const RendererProvider: React.FC<RendererProviderProps> = ({ children, renderer, targetDocument }) => {\n  if (canUseDOM()) {\n    // This if statement technically breaks the rules of hooks, but is safe because the condition never changes after\n    // mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useMemo(() => {\n      // \"rehydrateCache()\" can't be called in effects as it needs to be called before any component will be rendered to\n      // avoid double insertion of classes\n      rehydrateRendererCache(renderer, targetDocument);\n    }, [renderer, targetDocument]);\n  }\n\n  return <RendererContext.Provider value={renderer}>{children}</RendererContext.Provider>;\n};\n\n/**\n * Returns an instance of current makeStyles() renderer.\n *\n * @private Exported as \"useRenderer_unstable\" use it on own risk. Can be changed or removed without a notice.\n */\nexport function useRenderer(): GriffelRenderer {\n  return React.useContext(RendererContext);\n}\n"],"mappings":";;;AAmBA;;;AAGA,SAASA,SAASA,CAAA;EAChB,OAAO,OAAOC,MAAM,KAAK,WAAW,IAAI,CAAC,EAAEA,MAAM,CAACC,QAAQ,IAAID,MAAM,CAACC,QAAQ,CAACC,aAAa,CAAC;AAC9F;AAEA;;;AAGA,MAAMC,eAAe,gBAAGC,KAAK,CAACC,aAAa,eAAkBC,iBAAiB,EAAE,CAAC;AAEjF;;;MAGaC,gBAAgB,GAAoCC,IAAA,IAAuC;EAAA,IAAtC;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;GAAgB,GAAAH,IAAA;EACtG,IAAIT,SAAS,EAAE,EAAE;;;;IAIfK,KAAK,CAACQ,OAAO,CAAC;;;MAGZC,sBAAsB,CAACH,QAAQ,EAAEC,cAAc,CAAC;KACjD,EAAE,CAACD,QAAQ,EAAEC,cAAc,CAAC,CAAC;;EAGhC,oBAAOP,KAAA,CAAAF,aAAA,CAACC,eAAe,CAACW,QAAQ;IAACC,KAAK,EAAEL;KAAWD,QAAQ,CAA4B;AACzF;AAEA;;;;;SAKgBO,WAAWA,CAAA;EACzB,OAAOZ,KAAK,CAACa,UAAU,CAACd,eAAe,CAAC;AAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}