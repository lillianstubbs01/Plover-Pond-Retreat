[{"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\availabilities\\page.js":"1","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\components\\airbnb-card\\airbnb-card.js":"2","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\components\\brown-bg\\brown-bg.js":"3","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\components\\details-card\\details-card.js":"4","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\components\\navbar\\navbar.js":"5","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\components\\photo-tile\\photo-tile.js":"6","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\contact\\page.js":"7","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\custom-hooks\\useMediaQuery.js":"8","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\details\\page.js":"9","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\home\\home.js":"10","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\layout.js":"11","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\page.js":"12","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\photo-gallery\\page.js":"13","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\services\\api\\api.js":"14","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\services\\Messaging\\messaging.js":"15"},{"size":882,"mtime":1713141777572,"results":"16","hashOfConfig":"17"},{"size":1551,"mtime":1713143678640,"results":"18","hashOfConfig":"17"},{"size":318,"mtime":1711931833130,"results":"19","hashOfConfig":"17"},{"size":534,"mtime":1700691916303,"results":"20","hashOfConfig":"17"},{"size":2020,"mtime":1713069285078,"results":"21","hashOfConfig":"17"},{"size":1123,"mtime":1713139356084,"results":"22","hashOfConfig":"17"},{"size":5985,"mtime":1713069447211,"results":"23","hashOfConfig":"17"},{"size":441,"mtime":1696819032432,"results":"24","hashOfConfig":"17"},{"size":7463,"mtime":1713069488755,"results":"25","hashOfConfig":"17"},{"size":1543,"mtime":1712246370916,"results":"26","hashOfConfig":"17"},{"size":452,"mtime":1711934444203,"results":"27","hashOfConfig":"17"},{"size":186,"mtime":1711574258817,"results":"28","hashOfConfig":"17"},{"size":13667,"mtime":1713073050838,"results":"29","hashOfConfig":"17"},{"size":1262,"mtime":1712011428492,"results":"30","hashOfConfig":"17"},{"size":387,"mtime":1712009759778,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wp13oz",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\availabilities\\page.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\components\\airbnb-card\\airbnb-card.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\components\\brown-bg\\brown-bg.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\components\\details-card\\details-card.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\components\\navbar\\navbar.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\components\\photo-tile\\photo-tile.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\contact\\page.js",["78"],[],"'use client'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport NavBar from \"../components/navbar/navbar\";\r\nimport BrownBg from \"../components/brown-bg/brown-bg\";\r\nimport { WarningRegular, ArrowClockwiseRegular } from '@fluentui/react-icons';\r\nimport { messagingService } from '../services/Messaging/messaging';\r\n\r\nimport \"./contact.css\";\r\n\r\nfunction Contact() {\r\n\r\n    //info\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    //classnames\r\n    const [nameClass, setNameClass] = useState(\"contact-grouping\");\r\n    const [emailClass, setEmailClass] = useState(\"contact-grouping\");\r\n    const [messageClass, setMessageClass] = useState(\"contact-grouping\");\r\n    const [nameErrorClass, setNameErrorClass] = useState(\"contact-hidden\");\r\n    const [emailErrorClass, setEmailErrorClass] = useState(\"contact-hidden\");\r\n    const [messageErrorClass, setMessageErrorClass] = useState(\"contact-hidden\");\r\n\r\n    //errors\r\n    const emptyError = \"This field is required.\"\r\n    const invalidError = \"This is an invalid entry.\"\r\n    const [emailError, setEmailError] = useState(emptyError);\r\n\r\n    //loading\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            messagingService(name, email, message).then((res) => {\r\n                console.log('contact page res', res);\r\n                if (res === null) {\r\n                    setSubmitError(true);\r\n                    console.log('res is null');\r\n                } else {\r\n                    handleClear();\r\n                }\r\n            })\r\n        }\r\n    }, [isLoading, name, message, email, handleClear]);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(false);\r\n    }, [submitError]);\r\n\r\n    function handleClear() {\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setMessage(\"\");\r\n        clearErrorMessages();\r\n        setIsLoading(false);\r\n    }\r\n\r\n    function handleSubmit() {\r\n        clearErrorMessages();\r\n        if (!inputErrors()) {\r\n            // insert message submission and handling\r\n\r\n            setIsLoading(true);\r\n        }\r\n    }\r\n\r\n    // returns boolean for errors found\r\n    function inputErrors() {\r\n        let errors = false;\r\n        if (name === \"\") {\r\n            setNameClass(\"contact-grouping error\");\r\n            setNameErrorClass(\"error-text\");\r\n            errors = true;\r\n        }\r\n        if (checkValidEmail()) {\r\n            setEmailClass(\"contact-grouping error\");\r\n            setEmailErrorClass(\"error-text\");\r\n            setEmailError(invalidError);\r\n            errors = true\r\n        }\r\n        if (email === \"\") {\r\n            setEmailClass(\"contact-grouping error\");\r\n            setEmailErrorClass(\"error-text\");\r\n            setEmailError(emptyError);\r\n            errors = true;\r\n        }\r\n        if (message === \"\") {\r\n            setMessageClass(\"contact-grouping error\");\r\n            setMessageErrorClass(\"error-text\");\r\n            errors = true;\r\n        }\r\n        return errors\r\n    }\r\n\r\n    function clearErrorMessages() {\r\n        setNameErrorClass(\"contact-hidden\");\r\n        setEmailErrorClass(\"contact-hidden\");\r\n        setMessageErrorClass(\"contact-hidden\");\r\n        setSubmitError(false);\r\n    }\r\n\r\n    function checkValidEmail() {\r\n        let match = new RegExp('^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$');\r\n        return !match.test(email)\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact-page\">\r\n            <NavBar/>\r\n            <BrownBg\r\n                header={\"We're Happy To Help\"}\r\n                message=\"Fill out the contact sheet and we will follow up to answer any of your questions.\r\n                It is our goal to give you your best stay possible.\"\r\n                content={\r\n                    <div className=\"contact-card\">\r\n                        <div className={nameClass}>\r\n                            <h2>Name<span>*</span></h2>\r\n                            <input type=\"text\" value={name} onChange={(e) => {setName(e.target.value)}}></input>\r\n                            <p className={nameErrorClass}><WarningRegular/>{emptyError}</p>\r\n                        </div>\r\n                        <div className={emailClass}>\r\n                            <h2>Email<span>*</span></h2>\r\n                            <input type=\"text\" value={email} onChange={(e) => {setEmail(e.target.value)}}></input>\r\n                            <p className={emailErrorClass}><WarningRegular/>{emailError}</p>\r\n                        </div>\r\n                        <div className={messageClass}>\r\n                            <h2>Message<span>*</span></h2>\r\n                            <textarea value={message} onChange={(e) => {setMessage(e.target.value)}}></textarea>\r\n                            <p className={messageErrorClass}><WarningRegular/>{emptyError}</p>\r\n                        </div>\r\n                        { submitError ?\r\n                            <div className='error'>\r\n                                <p className='error-text' style={{'margin': '0.5rem'}}><WarningRegular />An error has occured. Please try again later.</p>\r\n                            </div>\r\n                            :\r\n                            <span style={{'display': 'none'}}/>\r\n                        }\r\n                        { isLoading ?\r\n                            <ArrowClockwiseRegular className=\"loading\"/>\r\n                            :\r\n                            <div className=\"btn-row\">\r\n                                <button className=\"clear-btn\" onClick={() => handleClear()}>Clear</button>\r\n                                <button className=\"submit-btn\" onClick={() => handleSubmit()}>Submit</button>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact","C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\custom-hooks\\useMediaQuery.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\details\\page.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\home\\home.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\layout.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\page.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\photo-gallery\\page.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\services\\api\\api.js",[],[],"C:\\Users\\lilli\\PhpstormProjects\\Plover-Pond-Retreat\\nextjs\\src\\app\\services\\Messaging\\messaging.js",[],[],{"ruleId":"79","severity":1,"message":"80","line":53,"column":5,"nodeType":"81","endLine":59,"endColumn":6},"react-hooks/exhaustive-deps","The 'handleClear' function makes the dependencies of useEffect Hook (at line 47) change on every render. To fix this, wrap the definition of 'handleClear' in its own useCallback() Hook.","FunctionDeclaration"]